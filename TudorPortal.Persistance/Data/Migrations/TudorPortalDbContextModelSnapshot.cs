// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tudor_Vladimirescu_students__portal.Data;

#nullable disable

namespace TudorPortal.Persistance.Data.Migrations
{
    [DbContext(typeof(TudorPortalDbContext))]
    partial class TudorPortalDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Tudor_Vladimirescu_students__portal.Entities.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CommentId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Commentitself")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Commentitself");

                    b.Property<int>("TopicsId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TopicsId");

                    b.HasIndex("UserId");

                    b.ToTable("Comment");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Commentitself = "Comment",
                            TopicsId = 1,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("Tudor_Vladimirescu_students__portal.Entities.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EventId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(20000)
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Content");

                    b.Property<DateTime>("Eventcreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Picture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Title");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Event");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "Lorem Ipsum1",
                            Eventcreated = new DateTime(2022, 5, 8, 9, 20, 0, 0, DateTimeKind.Unspecified),
                            Picture = "amfiteatru1.png",
                            Title = "Title1",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("Tudor_Vladimirescu_students__portal.Entities.EventLike", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EventLikeId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfLikes")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.HasIndex("UserId");

                    b.ToTable("EventLike");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EventId = 1,
                            NumberOfLikes = 1,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("Tudor_Vladimirescu_students__portal.Entities.TopicLike", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TopicLikeId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("NumberOfLikes")
                        .HasColumnType("int");

                    b.Property<int>("TopicId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TopicId");

                    b.HasIndex("UserId");

                    b.ToTable("TopicLike");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            NumberOfLikes = 1,
                            TopicId = 1,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("Tudor_Vladimirescu_students__portal.Entities.Topics", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TopicId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Content");

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Picture");

                    b.Property<int>("Status")
                        .HasMaxLength(3)
                        .HasColumnType("int")
                        .HasColumnName("Status");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Title");

                    b.Property<DateTime>("Topiccreated")
                        .HasColumnType("datetime2")
                        .HasColumnName("TopicCreated");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Topics");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "Topicuri",
                            Picture = "topic.png",
                            Status = 1,
                            Title = "Topic",
                            Topiccreated = new DateTime(2022, 6, 9, 9, 15, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1
                        });
                });

            modelBuilder.Entity("Tudor_Vladimirescu_students__portal.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Avatar")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Avatar");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("FirstName");

                    b.Property<string>("Hashedpassword")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Hashedpassword");

                    b.Property<bool>("IsAdministrator")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("LastName");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Avatar = "fatamea1.png",
                            Email = "ioanapopescu@gmail.com",
                            FirstName = "Ioana",
                            Hashedpassword = "12345",
                            IsAdministrator = false,
                            LastName = "Popescu"
                        });
                });

            modelBuilder.Entity("Tudor_Vladimirescu_students__portal.Entities.Comment", b =>
                {
                    b.HasOne("Tudor_Vladimirescu_students__portal.Entities.Topics", "Topics")
                        .WithMany("Comment")
                        .HasForeignKey("TopicsId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Tudor_Vladimirescu_students__portal.Entities.User", "User")
                        .WithMany("Comment")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Topics");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Tudor_Vladimirescu_students__portal.Entities.Event", b =>
                {
                    b.HasOne("Tudor_Vladimirescu_students__portal.Entities.User", "User")
                        .WithMany("Event")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Tudor_Vladimirescu_students__portal.Entities.EventLike", b =>
                {
                    b.HasOne("Tudor_Vladimirescu_students__portal.Entities.Event", "Event")
                        .WithMany("EventLikes")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Tudor_Vladimirescu_students__portal.Entities.User", "User")
                        .WithMany("EventLikes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Event");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Tudor_Vladimirescu_students__portal.Entities.TopicLike", b =>
                {
                    b.HasOne("Tudor_Vladimirescu_students__portal.Entities.Topics", "Topic")
                        .WithMany("TopicLikes")
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Tudor_Vladimirescu_students__portal.Entities.User", "User")
                        .WithMany("TopicLikes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Topic");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Tudor_Vladimirescu_students__portal.Entities.Topics", b =>
                {
                    b.HasOne("Tudor_Vladimirescu_students__portal.Entities.User", "User")
                        .WithMany("Topics")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Tudor_Vladimirescu_students__portal.Entities.Event", b =>
                {
                    b.Navigation("EventLikes");
                });

            modelBuilder.Entity("Tudor_Vladimirescu_students__portal.Entities.Topics", b =>
                {
                    b.Navigation("Comment");

                    b.Navigation("TopicLikes");
                });

            modelBuilder.Entity("Tudor_Vladimirescu_students__portal.Entities.User", b =>
                {
                    b.Navigation("Comment");

                    b.Navigation("Event");

                    b.Navigation("EventLikes");

                    b.Navigation("TopicLikes");

                    b.Navigation("Topics");
                });
#pragma warning restore 612, 618
        }
    }
}
